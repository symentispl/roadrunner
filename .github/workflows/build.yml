# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      # The Docker daemon setup provides support for TestContainers in GitHub Actions
      docker:
        image: docker:dind
        options: >-
          --privileged
          -v /var/run/docker.sock:/var/run/docker.sock
          -v /usr/bin/docker:/usr/bin/docker
        ports:
          - 2375:2375

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven
      
      # Set up TestContainers check
      - name: Docker info
        run: docker info
      
      - name: Build with Maven
        run: ./mvnw -B verify --file pom.xml -Pcoverage,coverage-report
        env:
          # This enables TestContainers to detect Docker
          TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE: /var/run/docker.sock
          DOCKER_HOST: unix:///var/run/docker.sock

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
            token: ${{ secrets.CODECOV_TOKEN }}

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v4.1.1
